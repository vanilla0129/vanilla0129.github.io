<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>香草布丁</title>
    <link>https://vanilla0129.top/</link>
    
    <atom:link href="https://vanilla0129.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>宜未雨而绸缪，勿临渴而掘井</description>
    <pubDate>Sat, 18 Nov 2023 15:10:04 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Python猜数字小游戏</title>
      <link>https://vanilla0129.top/2023/11/16/game/</link>
      <guid>https://vanilla0129.top/2023/11/16/game/</guid>
      <pubDate>Thu, 16 Nov 2023 11:14:47 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;一、猜数字&quot;&gt;&lt;a href=&quot;#一、猜数字&quot; class=&quot;headerlink&quot; title=&quot;一、猜数字&quot;&gt;&lt;/a&gt;一、猜数字&lt;/h2&gt;&lt;p&gt;之前在网上看到一个猜数字的编程游戏，具体功能是输入一个数字，判断这个数字跟随机生成的数字是否相等，若不相等则判断大小</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="一、猜数字"><a href="#一、猜数字" class="headerlink" title="一、猜数字"></a>一、猜数字</h2><p>之前在网上看到一个猜数字的编程游戏，具体功能是输入一个数字，判断这个数字跟随机生成的数字是否相等，若不相等则判断大小循环输入，直到相等为止。要实现这个功能很简单，几行python代码就可以搞定：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br>n = random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>)  <span class="hljs-comment">#1到10之间的随机数</span><br>a = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入一个数字: \n&quot;</span>))<br><br><span class="hljs-keyword">while</span> n != a:<br>    <span class="hljs-keyword">if</span> n &gt; a:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;太小了！&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;太大了！&quot;</span>)<br><br>    a = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请再次输入数字：\n&quot;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Congratulations!&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/game/1.png" srcset="/img/loading.gif" lazyload alt="运行结果"></p><h2 id="二、改进"><a href="#二、改进" class="headerlink" title="二、改进"></a>二、改进</h2><p>以上代码虽然实现了功能，但是结构也比较简单，而且想多猜几次数字还得反复运行，有点麻烦。那么可不可以加一个<strong>开始</strong>和<strong>结束</strong>的功能，然后根据自己的想法来决定是否继续运行呢？我们可以再加“亿点”东西，让这串代码可以达到更多我们想要的效果。</p><ul><li>这里我们要用到random和time库<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> time<br></code></pre></td></tr></table></figure></li><li>对于获取一个随机数我们可以把它放到一个函数里面去执行<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#获取随机数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_num</span>():<br>    random.seed(time.time())  <span class="hljs-comment">#获取随机数的种子随时间变化</span><br>    n = random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>)   <span class="hljs-comment">#获取一个随机数</span><br>    <span class="hljs-keyword">return</span> n<br></code></pre></td></tr></table></figure></li><li>定义游戏的主函数，输入的数字在这里完成大小判断<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#游戏主程序</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">game</span>():<br>    num = get_num()<br>    <span class="hljs-comment">#print(num)</span><br>    <span class="hljs-keyword">try</span>:<br>        b = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入一个数字：\n&quot;</span>))<br>        <span class="hljs-keyword">while</span> num != b:<br>            <span class="hljs-keyword">if</span> num &gt; b:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;遗憾，太小了！&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;遗憾，太大了！&quot;</span>)<br><br>            b = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请再次输入数字：\n&quot;</span>))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Congratulations!&quot;</span>)<br>        <span class="hljs-keyword">return</span> play_again()<br>    <span class="hljs-keyword">except</span> ValueError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>        <span class="hljs-keyword">return</span> game()<br></code></pre></td></tr></table></figure></li><li>编写一个”开始游戏”的函数<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;******欢迎来到游戏******\n&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;***********************\n&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        a = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;开始游戏Y/N:&quot;</span>).lower()<br>        <span class="hljs-keyword">if</span> a == <span class="hljs-string">&quot;y&quot;</span>:<br>            game()<br>        <span class="hljs-keyword">elif</span> a == <span class="hljs-string">&quot;n&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;game over&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>            <span class="hljs-keyword">return</span> start()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>        <span class="hljs-keyword">return</span> start()<br></code></pre></td></tr></table></figure></li><li>编写一个”再玩一遍”的函数,这个函数用来返回主程序与退出程序<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">play_again</span>():<br>    <span class="hljs-keyword">try</span>:<br>        UserInput = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;想要再玩一遍吗(Y/N):&quot;</span>).lower()<br>        <span class="hljs-keyword">if</span> UserInput == <span class="hljs-string">&quot;y&quot;</span>:<br>            game()<br>        <span class="hljs-keyword">elif</span> UserInput == <span class="hljs-string">&quot;n&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Thanks for playing!&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>            <span class="hljs-keyword">return</span> play_again()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>        <span class="hljs-keyword">return</span> play_again()<br></code></pre></td></tr></table></figure></li><li>下面是完整的代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-comment">#获取随机数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_num</span>():<br>    random.seed(time.time())<br>    n = random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>)<br>    <span class="hljs-keyword">return</span> n<br><br><span class="hljs-comment">#游戏主程序</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">game</span>():<br>    num = get_num()<br>    <span class="hljs-comment">#print(num)</span><br>    <span class="hljs-keyword">try</span>:<br>        b = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入一个数字：\n&quot;</span>))<br>        <span class="hljs-keyword">while</span> num != b:<br>            <span class="hljs-keyword">if</span> num &gt; b:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;遗憾，太小了！&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;遗憾，太大了！&quot;</span>)<br><br>            b = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请再次输入数字：\n&quot;</span>))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Congratulations!&quot;</span>)<br>        <span class="hljs-keyword">return</span> play_again()<br>    <span class="hljs-keyword">except</span> ValueError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>        <span class="hljs-keyword">return</span> game()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;******欢迎来到游戏******\n&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;***********************\n&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        a = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;开始游戏Y/N:&quot;</span>).lower()<br>        <span class="hljs-keyword">if</span> a == <span class="hljs-string">&quot;y&quot;</span>:<br>            game()<br>        <span class="hljs-keyword">elif</span> a == <span class="hljs-string">&quot;n&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;game over&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>            <span class="hljs-keyword">return</span> start()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>        <span class="hljs-keyword">return</span> start()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">play_again</span>():<br>    <span class="hljs-keyword">try</span>:<br>        UserInput = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;想要再玩一遍吗(Y/N):&quot;</span>).lower()<br>        <span class="hljs-keyword">if</span> UserInput == <span class="hljs-string">&quot;y&quot;</span>:<br>            game()<br>        <span class="hljs-keyword">elif</span> UserInput == <span class="hljs-string">&quot;n&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Thanks for playing!&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>            <span class="hljs-keyword">return</span> play_again()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;invalid input&quot;</span>)<br>        <span class="hljs-keyword">return</span> play_again()<br><br>start()<br><br></code></pre></td></tr></table></figure></li></ul><p><img src="/img/game/2.png" srcset="/img/loading.gif" lazyload alt="运行结果"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>虽然有种为了碟醋包了盘饺子的感觉，不过有时候问题不止有一种解决办法，多个方法能给人启发，也许下个问题就会用上。</p>]]></content:encoded>
      
      
      <category domain="https://vanilla0129.top/categories/%E7%BC%96%E7%A8%8B/">编程</category>
      
      
      <category domain="https://vanilla0129.top/tags/Pthon/">Pthon</category>
      
      <category domain="https://vanilla0129.top/tags/%E7%8C%9C%E6%95%B0%E5%AD%97/">猜数字</category>
      
      
      <comments>https://vanilla0129.top/2023/11/16/game/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>基本声明</title>
      <link>https://vanilla0129.top/2023/11/08/declaration/</link>
      <guid>https://vanilla0129.top/2023/11/08/declaration/</guid>
      <pubDate>Wed, 08 Nov 2023 04:38:58 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;此站仅用作学习交流使用，不参与任何商业活动，有参考及借鉴均注明出处，可以点击链接跳转到对应网页&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>此站仅用作学习交流使用，不参与任何商业活动，有参考及借鉴均注明出处，可以点击链接跳转到对应网页</p>]]></content:encoded>
      
      
      <category domain="https://vanilla0129.top/categories/%E5%85%B6%E4%BB%96/">其他</category>
      
      
      
      <comments>https://vanilla0129.top/2023/11/08/declaration/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>fluid主题添加音乐播放器</title>
      <link>https://vanilla0129.top/2023/10/27/aplayer/</link>
      <guid>https://vanilla0129.top/2023/10/27/aplayer/</guid>
      <pubDate>Fri, 27 Oct 2023 04:03:38 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;aplayer是一个可以为你的网站添加音乐播放器的插件，按照以下步骤就可以播放自己的歌单了&lt;/p&gt;
&lt;h2 id=</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><hr><p>aplayer是一个可以为你的网站添加音乐播放器的插件，按照以下步骤就可以播放自己的歌单了</p><h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><hr><p>在hexo根目录下打开git bash输入以下代码</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-tag-aplayer</span><br></code></pre></td></tr></table></figure><h2 id="三、配置"><a href="#三、配置" class="headerlink" title="三、配置"></a>三、配置</h2><hr><p>在主题配置文件_config.yml中找到custom，输入如下代码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">custom_js:<br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/npm/</span>aplayer<span class="hljs-regexp">/dist/</span>APlayer.min.js<br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/m</span>etowolf<span class="hljs-regexp">/MetingJS@1.2/</span>dist/Meting.min.js<br>custom_css:<br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/npm/</span>aplayer<span class="hljs-regexp">/dist/</span>APlayer.min.css<br></code></pre></td></tr></table></figure><p>添加完后打开站点配置文件_config.yml添加以下语句</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># aplayer</span><br><span class="hljs-attr">aplayer:</span>  <br>  <span class="hljs-attr">meting:</span> <span class="hljs-literal">true</span>  <br>  <span class="hljs-attr">asset_inject:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="四、创建音乐界面"><a href="#四、创建音乐界面" class="headerlink" title="四、创建音乐界面"></a>四、创建音乐界面</h2><hr><p>1、在hexo根目录下打开git bash输入如下代码</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> playlist<br></code></pre></td></tr></table></figure><p>playlist是文件名，可以任意取，最好用英文<br><img src="/img/img1/2.png" srcset="/img/loading.gif" lazyload><br>2、可以看到在source文件夹下生成了一个名为playlist的文件夹，点进去编辑index.md里面的内容<br>输入如下内容<br><img src="/img/img1/3.png" srcset="/img/loading.gif" lazyload></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">title:</span> 音乐<br><span class="hljs-symbol">date:</span> <br><span class="hljs-symbol">type:</span> <span class="hljs-string">&quot;playlist&quot;</span><br></code></pre></td></tr></table></figure><p>3、前面的步骤完成后再打开主题配置文件找到menu<br><img src="/img/img1/4.png" srcset="/img/loading.gif" lazyload><br>按图示添加</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">- &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&quot;音乐&quot;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&quot;/playlist/&quot;</span>, icon: <span class="hljs-string">&quot;iconfont icon-music&quot;</span> &#125;<br></code></pre></td></tr></table></figure><h2 id="五、添加音乐"><a href="#五、添加音乐" class="headerlink" title="五、添加音乐"></a>五、添加音乐</h2><hr><ul><li>上面的准备工作都完成后再回到playlist里面的index文件，按照<a href="https://github.com/MoePlayer/hexo-tag-aplayer">官方文档</a>编辑</li></ul><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="language-xml"><span class="hljs-comment">&lt;!-- 歌曲 --&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">meting</span> <span class="hljs-string">&quot;1971627229&quot;</span> <span class="hljs-string">&quot;netease&quot;</span> <span class="hljs-string">&quot;song&quot;</span> <span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-comment">&lt;!-- 歌单 --&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">meting</span> <span class="hljs-string">&quot;8840413814&quot;</span> <span class="hljs-string">&quot;netease&quot;</span> <span class="hljs-string">&quot;playlist&quot;</span> <span class="hljs-string">&quot;theme:#3F51B5&quot;</span> <span class="hljs-string">&quot;mutex:true&quot;</span> <span class="hljs-string">&quot;preload:auto&quot;</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><ul><li>meting部分选项列表，详见<a href="https://github.com/MoePlayer/hexo-tag-aplayer">官方文档</a><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>必须值</td><td>歌曲 id &#x2F; 播放列表 id &#x2F; 相册 id &#x2F; 搜索关键字</td></tr><tr><td>server</td><td>必须值</td><td>音乐平台: netease, tencent, kugou, xiami, baidu</td></tr><tr><td>type</td><td>必须值</td><td>song, playlist, album, search, artist</td></tr></tbody></table></li></ul><p><img src="/img/img1/1.png" srcset="/img/loading.gif" lazyload alt="展示效果"><br>示例：<a href="https://vanilla0129.top/playlist/">https://vanilla0129.top/playlist/</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><hr><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer">https://github.com/MoePlayer/hexo-tag-aplayer</a><br><a href="https://blog.jishuqin.cn/2023/03/05/Fluid%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E9%A1%B5%E9%9D%A2/">https://blog.jishuqin.cn/2023/03/05/Fluid%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E9%A1%B5%E9%9D%A2/</a></p>]]></content:encoded>
      
      
      <category domain="https://vanilla0129.top/categories/%E6%8A%80%E6%9C%AF/">技术</category>
      
      
      <category domain="https://vanilla0129.top/tags/%E9%9F%B3%E4%B9%90/">音乐</category>
      
      <category domain="https://vanilla0129.top/tags/aplayer/">aplayer</category>
      
      <category domain="https://vanilla0129.top/tags/hexo-tag-aplayer/">hexo-tag-aplayer</category>
      
      <category domain="https://vanilla0129.top/tags/%E6%92%AD%E6%94%BE%E5%99%A8/">播放器</category>
      
      
      <comments>https://vanilla0129.top/2023/10/27/aplayer/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>网站优化</title>
      <link>https://vanilla0129.top/2023/10/07/optimize/</link>
      <guid>https://vanilla0129.top/2023/10/07/optimize/</guid>
      <pubDate>Sat, 07 Oct 2023 10:12:06 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;在上一篇文章我提到了在GithubPage上部署静态博客但是访问速度很慢，最后通过&lt;a href=&quot;https://hosting</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr><p>在上一篇文章我提到了在GithubPage上部署静态博客但是访问速度很慢，最后通过<a href="https://hosting.4everland.org/#/?invite=XNJRVZFH">4everland</a>将博客部署在其创建的项目来进行优化。今天还有一种方法可以优化，那就是hexo-neat插件。</p><h2 id="hexo-neat"><a href="#hexo-neat" class="headerlink" title="hexo-neat"></a>hexo-neat</h2><hr><p>对于个人博客来说，优化页面的访问速度是很有必要的，如果打开你的个人站点，加载个首页就要十几秒，页面长时间处于空白状态，想必没什么人能够忍受得了吧。我个人觉得，如果能把页面的加载时间控制在三四秒内，就很不错了。网上有很多相关的博文，常规的做法是使用gulp来进行压缩，gulp是Node.js下的自动构建工具，通过一列的task执行步骤进行自动流程化处理。但是这种方法比较麻烦，我个人尝试过，但遇到的问题在查阅了很多资料没有解决后才选择了neat。简单来说，neat是一个压缩资源的插件，在打开博客页面时加载速度会更快。</p><h3 id="在站点根目录下安装hexo-neat"><a href="#在站点根目录下安装hexo-neat" class="headerlink" title="在站点根目录下安装hexo-neat"></a>在站点根目录下安装hexo-neat</h3><p>用管理员身份运行命令行，输入如下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-neat --save<br></code></pre></td></tr></table></figure><h3 id="为站点配置文件添加相关配置"><a href="#为站点配置文件添加相关配置" class="headerlink" title="为站点配置文件添加相关配置"></a>为站点配置文件添加相关配置</h3><p>直接添加到站点配置文件E:\Blog_config.yml的末尾即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># hexo-neat</span><br><span class="hljs-comment"># 博文压缩</span><br><span class="hljs-attr">neat_enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment"># 压缩html</span><br><span class="hljs-attr">neat_html:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span><br><span class="hljs-comment"># 压缩css  </span><br><span class="hljs-attr">neat_css:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/*.min.css&#x27;</span><br><span class="hljs-comment"># 压缩js</span><br><span class="hljs-attr">neat_js:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">mangle:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">output:</span><br>  <span class="hljs-attr">compress:</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/*.min.js&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/jquery.fancybox.pack.js&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/index.js&#x27;</span>  <br></code></pre></td></tr></table></figure><h2 id="主题fluid懒加载设置"><a href="#主题fluid懒加载设置" class="headerlink" title="主题fluid懒加载设置"></a>主题fluid懒加载设置</h2><hr><p>本人目前使用主题为<a href="https://hexo.fluid-dev.com/">fluid</a>，这款主题有一个叫懒加载的功能，开启后打开页面时会优先加载其他资源而后加载图片，也是一种优化方案。</p><p>打开fluid主题配置文件E:\Blog\themes\fluid_config.yml，找到lazyload，将enable后面的false改为true</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 对页面中的图片和评论插件进行懒加载处理，可见范围外的元素不会提前加载</span><br><span class="hljs-comment"># Lazy loading of images and comment plugin on the page</span><br><span class="hljs-attr">lazyload:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 加载时的占位图片</span><br>  <span class="hljs-comment"># The placeholder image when loading</span><br>  <span class="hljs-attr">loading_img:</span> <span class="hljs-string">/img/loading.gif</span><br><br>  <span class="hljs-comment"># 开启后懒加载仅在文章页生效，如果自定义页面需要使用，可以在 Front-matter 里指定 `lazyload: true`</span><br>  <span class="hljs-comment"># If true, only enable lazyload on the post page. For custom pages, you can set &#x27;lazyload: true&#x27; in front-matter</span><br>  <span class="hljs-attr">onlypost:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 触发加载的偏移倍数，基数是视窗高度，可根据部署环境的请求速度调节</span><br>  <span class="hljs-comment"># The factor of viewport height that triggers loading</span><br>  <span class="hljs-attr">offset_factor:</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>之后在博客的根目录下打开git bash，输入如下代码完成静态部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><hr><p>在复制代码的时候一定要记得看清文件位置，不然可能会出现报错或者没有效果的问题。</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><hr><p>最后我在这里放几款推荐主题<br><a href="https://butterfly.js.org/">Butterfly</a><br><a href="https://hexo.fluid-dev.com/">fluid</a><br><a href="https://volantis.js.org/examples/">Volantis</a><br><a href="https://yelog.org/">3-hexo</a><br><a href="https://probberechts.github.io/hexo-theme-cactus/">Cactus</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_41287260/article/details/99687257">Hexo文件压缩</a><br><a href="https://blog.csdn.net/cungudafa/article/details/104327497">Hexo-neat插件优化提升访问效率</a></p>]]></content:encoded>
      
      
      <category domain="https://vanilla0129.top/categories/%E6%8A%80%E6%9C%AF/">技术</category>
      
      
      <category domain="https://vanilla0129.top/tags/%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6/">访问速度</category>
      
      <category domain="https://vanilla0129.top/tags/%E4%BC%98%E5%8C%96/">优化</category>
      
      <category domain="https://vanilla0129.top/tags/neat/">neat</category>
      
      <category domain="https://vanilla0129.top/tags/%E5%8E%8B%E7%BC%A9/">压缩</category>
      
      <category domain="https://vanilla0129.top/tags/%E6%87%92%E5%8A%A0%E8%BD%BD/">懒加载</category>
      
      
      <comments>https://vanilla0129.top/2023/10/07/optimize/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>速度第一！</title>
      <link>https://vanilla0129.top/2023/10/04/youhua/</link>
      <guid>https://vanilla0129.top/2023/10/04/youhua/</guid>
      <pubDate>Wed, 04 Oct 2023 09:06:50 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;搭建博客&quot;&gt;&lt;a href=&quot;#搭建博客&quot; class=&quot;headerlink&quot; title=&quot;搭建博客&quot;&gt;&lt;/a&gt;搭建博客&lt;/h2&gt;&lt;p&gt;这几天我在网上学到了如何搭建个人博客。搭建博客最需要的是什么呢？唯一需要的就是耐心和坚持，在遇到问题的时候查阅相关资料，虽然</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><p>这几天我在网上学到了如何搭建个人博客。搭建博客最需要的是什么呢？唯一需要的就是耐心和坚持，在遇到问题的时候查阅相关资料，虽然有时候半天也没有解决但是问题解决的那一刻令人十分喜悦的。相关<br>文章我放到了末尾，有兴趣的朋友可以了解一下。</p><h2 id="关于优化"><a href="#关于优化" class="headerlink" title="关于优化"></a>关于优化</h2><p>在搭建完博客以后我发现访问速度特别慢，具体原因是因为我们将Hexo博客利用官方的GithubPage来免费部署静态博客，但是GithubPage实在是太慢了。</p><p>我在网上查阅了很多关于优化博客访问速度的资料，但是有的方案繁琐、有的方案复杂，还有的因为时间原因下载的插件版本过高，一些原来的函数在新版本不适用。结果就是频繁报错，即使安装旧版本依然会因为各种问题而停止。但是一篇关于加速博客的文章为我找到了一个解决方法。原理是访问”<a href="https://hosting.4everland.org/#/?invite=XNJRVZFH">https://hosting.4everland.org/#/?invite=XNJRVZFH</a>“<br>选择Github账号登陆后再创建新项目，将Hexo部署到这个网站上，接着绑定自己的域名就可以提高访问速度啦！</p><p>打开网站需要加载很长的时间，等网站加载完耐心也没了。所以我意识到一个问题，仅从功能性的角度出发优不优化确实无关紧要，但要考虑实用性就必须过优化这一关。市面上多少产品上架之后因为优化问题收获了很多差评，比如游戏行业，厂商优化不过关，玩家就不能正常体验游戏。毕竟不是人人都有4090的（）要想赚更多的钱就得考虑中低配设备。先不说游戏内容如何，连游戏都不能打开或者游玩十分卡顿，谁玩了这种游戏都会窝火（扯远了）。</p><p>回到正题，关于博客的优化我也还在学习当中，这个博客也是跟着一个大佬一步步做的。相信我以后还能学到更多东西！</p><p>参考文章：<br><a href="https://juejin.cn/post/7009209925024874526">博客加速</a><br><a href="https://zhuanlan.zhihu.com/p/102592286">从零搭建个人博客</a></p>]]></content:encoded>
      
      
      <category domain="https://vanilla0129.top/categories/%E6%8A%80%E6%9C%AF/">技术</category>
      
      
      <category domain="https://vanilla0129.top/tags/%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6/">访问速度</category>
      
      <category domain="https://vanilla0129.top/tags/%E4%BC%98%E5%8C%96/">优化</category>
      
      <category domain="https://vanilla0129.top/tags/4everland/">4everland</category>
      
      
      <comments>https://vanilla0129.top/2023/10/04/youhua/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
