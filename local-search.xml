<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>fluid主题添加音乐播放器</title>
    <link href="/2023/10/27/aplayer/"/>
    <url>/2023/10/27/aplayer/</url>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><hr><p>aplayer是一个可以为你的网站添加音乐播放器的插件，按照以下步骤就可以播放自己的歌单了</p><h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><hr><p>在hexo根目录下打开git bash输入以下代码<br>‘’’<br>npm install –save hexo-tag-aplayer<br>‘’’</p><h2 id="三、配置"><a href="#三、配置" class="headerlink" title="三、配置"></a>三、配置</h2><hr><p>在主题配置文件_config.yml中找到custom，输入如下代码<br>‘’’<br>custom_js:</p><ul><li>&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer&#x2F;dist&#x2F;APlayer.min.js</li><li>&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;metowolf&#x2F;<a href="mailto:&#x4d;&#101;&#116;&#x69;&#x6e;&#103;&#x4a;&#83;&#x40;&#x31;&#x2e;&#x32;">&#x4d;&#101;&#116;&#x69;&#x6e;&#103;&#x4a;&#83;&#x40;&#x31;&#x2e;&#x32;</a>&#x2F;dist&#x2F;Meting.min.js<br>custom_css:</li><li>&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer&#x2F;dist&#x2F;APlayer.min.css<br>‘’’<br>添加完后打开站点配置文件_config.yml添加以下语句<br>‘’’</li></ul><h1 id="aplayer"><a href="#aplayer" class="headerlink" title="aplayer"></a>aplayer</h1><p>aplayer:<br>  meting: true<br>  asset_inject: false<br>‘’’</p><h2 id="四、创建音乐界面"><a href="#四、创建音乐界面" class="headerlink" title="四、创建音乐界面"></a>四、创建音乐界面</h2><hr><p>1、在hexo根目录下打开git bash输入如下代码<br>‘’’<br>hexo new page playlist<br>‘’’<br>playlist是文件名，可以任意取，最好用英文<br><img src="/img/img1/2.png" srcset="/img/loading.gif" lazyload><br>2、可以看到在source文件夹下生成了一个名为playlist的文件夹，点进去编辑index.md里面的内容<br>输入如下内容<br><img src="/img/img1/3.png" srcset="/img/loading.gif" lazyload><br>‘’’<br>title: 音乐<br>date:<br>type: “playlist”<br>‘’’<br>3、前面的步骤完成后再打开主题配置文件找到menu<br><img src="/img/img1/4.png" srcset="/img/loading.gif" lazyload><br>按图示添加<br>‘’’</p><ul><li>{ key: “音乐”, link: “&#x2F;playlist&#x2F;“, icon: “iconfont icon-music” }<br>‘’’</li></ul><h2 id="五、添加音乐"><a href="#五、添加音乐" class="headerlink" title="五、添加音乐"></a>五、添加音乐</h2><hr><ul><li>上面的准备工作都完成后再回到playlist里面的index文件，按照<a href="https://github.com/MoePlayer/hexo-tag-aplayer">官方文档</a>编辑</li></ul><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>‘’’</p><!-- 歌曲 -->    <div id="aplayer-QdEJLnKC" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1971627229" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><!-- 歌单 -->    <div id="aplayer-lHKHebgd" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="8840413814" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#3F51B5"    ></div><p>‘’’</p><ul><li>meting部分选项列表，详见<a href="https://github.com/MoePlayer/hexo-tag-aplayer">官方文档</a><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>必须值</td><td>歌曲 id &#x2F; 播放列表 id &#x2F; 相册 id &#x2F; 搜索关键字</td></tr><tr><td>server</td><td>必须值</td><td>音乐平台: netease, tencent, kugou, xiami, baidu</td></tr><tr><td>type</td><td>必须值</td><td>song, playlist, album, search, artist</td></tr></tbody></table></li></ul><p><img src="/img/img1/1.png" srcset="/img/loading.gif" lazyload alt="展示效果"><br>示例：<a href="https://vanilla0129.top/playlist/">https://vanilla0129.top/playlist/</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><hr><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer">https://github.com/MoePlayer/hexo-tag-aplayer</a><br><a href="https://blog.jishuqin.cn/2023/03/05/Fluid%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E9%A1%B5%E9%9D%A2/">https://blog.jishuqin.cn/2023/03/05/Fluid%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E9%A1%B5%E9%9D%A2/</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音乐</tag>
      
      <tag>aplayer</tag>
      
      <tag>hexo-tag-aplayer</tag>
      
      <tag>播放器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网站优化</title>
    <link href="/2023/10/07/optimize/"/>
    <url>/2023/10/07/optimize/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr><p>在上一篇文章我提到了在GithubPage上部署静态博客但是访问速度很慢，最后通过<a href="https://hosting.4everland.org/#/?invite=XNJRVZFH">4everland</a>将博客部署在其创建的项目来进行优化。今天还有一种方法可以优化，那就是hexo-neat插件。</p><h2 id="hexo-neat"><a href="#hexo-neat" class="headerlink" title="hexo-neat"></a>hexo-neat</h2><hr><p>对于个人博客来说，优化页面的访问速度是很有必要的，如果打开你的个人站点，加载个首页就要十几秒，页面长时间处于空白状态，想必没什么人能够忍受得了吧。我个人觉得，如果能把页面的加载时间控制在三四秒内，就很不错了。网上有很多相关的博文，常规的做法是使用gulp来进行压缩，gulp是Node.js下的自动构建工具，通过一列的task执行步骤进行自动流程化处理。但是这种方法比较麻烦，我个人尝试过，但遇到的问题在查阅了很多资料没有解决后才选择了neat。简单来说，neat是一个压缩资源的插件，在打开博客页面时加载速度会更快。</p><h3 id="在站点根目录下安装hexo-neat"><a href="#在站点根目录下安装hexo-neat" class="headerlink" title="在站点根目录下安装hexo-neat"></a>在站点根目录下安装hexo-neat</h3><p>用管理员身份运行命令行，输入如下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-neat --save<br></code></pre></td></tr></table></figure><h3 id="为站点配置文件添加相关配置"><a href="#为站点配置文件添加相关配置" class="headerlink" title="为站点配置文件添加相关配置"></a>为站点配置文件添加相关配置</h3><p>直接添加到站点配置文件E:\Blog_config.yml的末尾即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># hexo-neat</span><br><span class="hljs-comment"># 博文压缩</span><br><span class="hljs-attr">neat_enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment"># 压缩html</span><br><span class="hljs-attr">neat_html:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span><br><span class="hljs-comment"># 压缩css  </span><br><span class="hljs-attr">neat_css:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/*.min.css&#x27;</span><br><span class="hljs-comment"># 压缩js</span><br><span class="hljs-attr">neat_js:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">mangle:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">output:</span><br>  <span class="hljs-attr">compress:</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/*.min.js&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/jquery.fancybox.pack.js&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/index.js&#x27;</span>  <br></code></pre></td></tr></table></figure><h2 id="主题fluid懒加载设置"><a href="#主题fluid懒加载设置" class="headerlink" title="主题fluid懒加载设置"></a>主题fluid懒加载设置</h2><hr><p>本人目前使用主题为<a href="https://hexo.fluid-dev.com/">fluid</a>，这款主题有一个叫懒加载的功能，开启后打开页面时会优先加载其他资源而后加载图片，也是一种优化方案。</p><p>打开fluid主题配置文件E:\Blog\themes\fluid_config.yml，找到lazyload，将enable后面的false改为true</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 对页面中的图片和评论插件进行懒加载处理，可见范围外的元素不会提前加载</span><br><span class="hljs-comment"># Lazy loading of images and comment plugin on the page</span><br><span class="hljs-attr">lazyload:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 加载时的占位图片</span><br>  <span class="hljs-comment"># The placeholder image when loading</span><br>  <span class="hljs-attr">loading_img:</span> <span class="hljs-string">/img/loading.gif</span><br><br>  <span class="hljs-comment"># 开启后懒加载仅在文章页生效，如果自定义页面需要使用，可以在 Front-matter 里指定 `lazyload: true`</span><br>  <span class="hljs-comment"># If true, only enable lazyload on the post page. For custom pages, you can set &#x27;lazyload: true&#x27; in front-matter</span><br>  <span class="hljs-attr">onlypost:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 触发加载的偏移倍数，基数是视窗高度，可根据部署环境的请求速度调节</span><br>  <span class="hljs-comment"># The factor of viewport height that triggers loading</span><br>  <span class="hljs-attr">offset_factor:</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>之后在博客的根目录下打开git bash，输入如下代码完成静态部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><hr><p>在复制代码的时候一定要记得看清文件位置，不然可能会出现报错或者没有效果的问题。</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><hr><p>最后我在这里放几款推荐主题<br><a href="https://butterfly.js.org/">Butterfly</a><br><a href="https://hexo.fluid-dev.com/">fluid</a><br><a href="https://volantis.js.org/examples/">Volantis</a><br><a href="https://yelog.org/">3-hexo</a><br><a href="https://probberechts.github.io/hexo-theme-cactus/">Cactus</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_41287260/article/details/99687257">Hexo文件压缩</a><br><a href="https://blog.csdn.net/cungudafa/article/details/104327497">Hexo-neat插件优化提升访问效率</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>访问速度</tag>
      
      <tag>优化</tag>
      
      <tag>neat</tag>
      
      <tag>压缩</tag>
      
      <tag>懒加载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>速度第一！</title>
    <link href="/2023/10/04/youhua/"/>
    <url>/2023/10/04/youhua/</url>
    
    <content type="html"><![CDATA[<h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><p>这几天我在网上学到了如何搭建个人博客。搭建博客最需要的是什么呢？唯一需要的就是耐心和坚持，在遇到问题的时候查阅相关资料，虽然有时候半天也没有解决但是问题解决的那一刻令人十分喜悦的。相关<br>文章我放到了末尾，有兴趣的朋友可以了解一下。</p><h2 id="关于优化"><a href="#关于优化" class="headerlink" title="关于优化"></a>关于优化</h2><p>在搭建完博客以后我发现访问速度特别慢，具体原因是因为我们将Hexo博客利用官方的GithubPage来免费部署静态博客，但是GithubPage实在是太慢了。</p><p>我在网上查阅了很多关于优化博客访问速度的资料，但是有的方案繁琐、有的方案复杂，还有的因为时间原因下载的插件版本过高，一些原来的函数在新版本不适用。结果就是频繁报错，即使安装旧版本依然会因为各种问题而停止。但是一篇关于加速博客的文章为我找到了一个解决方法。原理是访问”<a href="https://hosting.4everland.org/#/?invite=XNJRVZFH">https://hosting.4everland.org/#/?invite=XNJRVZFH</a>“<br>选择Github账号登陆后再创建新项目，将Hexo部署到这个网站上，接着绑定自己的域名就可以提高访问速度啦！</p><p>打开网站需要加载很长的时间，等网站加载完耐心也没了。所以我意识到一个问题，仅从功能性的角度出发优不优化确实无关紧要，但要考虑实用性就必须过优化这一关。市面上多少产品上架之后因为优化问题收获了很多差评，比如游戏行业，厂商优化不过关，玩家就不能正常体验游戏。毕竟不是人人都有4090的（）要想赚更多的钱就得考虑中低配设备。先不说游戏内容如何，连游戏都不能打开或者游玩十分卡顿，谁玩了这种游戏都会窝火（扯远了）。</p><p>回到正题，关于博客的优化我也还在学习当中，这个博客也是跟着一个大佬一步步做的。相信我以后还能学到更多东西！</p><p>参考文章：<br><a href="https://juejin.cn/post/7009209925024874526">博客加速</a><br><a href="https://zhuanlan.zhihu.com/p/102592286">从零搭建个人博客</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>访问速度</tag>
      
      <tag>优化</tag>
      
      <tag>4everland</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
